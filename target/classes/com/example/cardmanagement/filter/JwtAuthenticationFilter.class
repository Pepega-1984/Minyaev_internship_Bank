// Source code is decompiled from a .class file using FernFlower decompiler.
package com.example.cardmanagement.filter;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import lombok.Generated;
import org.springframework.lang.NonNull;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

@Component
public class JwtAuthenticationFilter extends OncePerRequestFilter {
   private final JwtService jwtService;
   private final UserDetailsService userDetailsService;

   protected void doFilterInternal(@NonNull HttpServletRequest request, @NonNull HttpServletResponse response, @NonNull FilterChain filterChain) throws ServletException, IOException {
      throw new Error("Unresolved compilation problems: \n\tJwtService cannot be resolved to a type\n\tJwtService cannot be resolved to a type\n");
   }

   @Generated
   public JwtAuthenticationFilter(final JwtService jwtService, final UserDetailsService userDetailsService) {
      throw new Error("Unresolved compilation problems: \n\tJwtService cannot be resolved to a type\n\tJwtService cannot be resolved to a type\n\tJwtService cannot be resolved to a type\n");
   }
}
